# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2.0
orbs:
  coveralls: coveralls/coveralls@1.0.4
aliases:
  - &container_python39
    docker:
      - image: cimg/python:3.9.10 # primary container for the build job
    environment:
      TOXENV: py39

  - &container_python38
    docker:
      - image: cimg/python:3.8.10
    environment:
      TOXENV: py38

  - &run_task_install_tox_dependencies
    run:
      name: install tox dependencies
      command: |
        sudo apt-get -qq update
        sudo apt install -y build-essential libssl-dev libpython2-dev python3-pip
        sudo pip3 install tox
  - &run_task_install_dependencies_poetry_python39
    run:
      name: Setup, install Poetry & dependencies
      command: |
        curl -sSL https://install.python-poetry.org | python3 - --version 1.2.2
        poetry env use 3.9.10
        poetry install
  - &run_task_install_dependencies_poetry_python38
    run:
      name: Setup, install Poetry & dependencies
      command: |
        curl -sSL https://install.python-poetry.org | python3 - --version 1.2.2
        poetry env use 3.8.10
        poetry install
  - &set_env_vars
    run:
      name: setup environment variables.
      command: |
        echo export DEBUG=${DEBUG} >> ./.env
        echo export JWT_SECRET_KEY=${JWT_SECRET_KEY} >> ./.env
        echo export SINGLESTORE_USERNAME=${SINGLESTORE_USERNAME} >> ./.env
        echo export SINGLESTORE_PASSWORD=${SINGLESTORE_PASSWORD} >> ./.env
        echo export SINGLESTORE_HOST=${SINGLESTORE_HOST} >> ./.env
        echo export SINGLESTORE_PORT=${SINGLESTORE_PORT} >> ./.env
        echo export SINGLESTORE_DATABASE=${SINGLESTORE_DATABASE} >> ./.env
        echo export REDIS_USERNAME=${REDIS_USERNAME} >> ./.env
        echo export REDIS_PASSWORD=${REDIS_PASSWORD} >> ./.env
        echo export REDIS_HOST=${REDIS_HOST} >> ./.env
        echo export REDIS_PORT=${REDIS_PORT} >> ./.env
        echo export DETA_PROJECT_KEY=${DETA_PROJECT_KEY} >> ./.env

jobs:

  testing_python38:
    <<: *container_python38
    steps:
      # Get the code
      - checkout
      # Cache
      - restore_cache:
          keys:
            - deps-{{ checksum "poetry.lock" }}
      - *run_task_install_tox_dependencies
      - *run_task_install_dependencies_poetry_python38
      - *set_env_vars
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          name: run tests
          command: |
            tox -r
      - store_test_results:
          path: .tox/test/tmp/reports

  testing_python39:
    <<: *container_python39
    steps:
      # Get the code
      - checkout
      # Cache
      - restore_cache:
          keys:
            - deps-{{ checksum "poetry.lock" }}
      - *run_task_install_tox_dependencies
      - *run_task_install_dependencies_poetry_python39
      - *set_env_vars
      - save_cache:
          key: deps-{{ checksum "poetry.lock" }}
          paths:
            - /home/circleci/.cache/pypoetry/virtualenvs
      - run:
          name: run tests
          command: |
            tox -r
      - store_test_results:
          path: .tox/test/tmp/reports

workflows:
  version: 2
  test:
    jobs:
      - testing_python38
      - testing_python39
